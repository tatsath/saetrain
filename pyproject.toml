[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "saetrain"
description = "Train SAEs and transcoders for transformer models"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["interpretability", "explainable-ai"]
license = {text = "MIT License"}
dependencies = [
    "accelerate",   # For device_map in from_pretrained
    "datasets",
    "einops",
    "huggingface-hub",
    "natsort",  # For sorting module names
    "safetensors",
    "schedulefree",
    "simple-parsing",
    "torch",
    "transformers",
]
version = "1.1.3"
[project.optional-dependencies]
dev = [
    "pre-commit",
]

[project.scripts]
saetrain = "saetrain.__main__:run"

[tool.pyright]
include = ["saetrain*"]
reportPrivateImportUsage = false

[tool.setuptools.packages.find]
include = ["saetrain*"]

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) codes
# See https://beta.ruff.rs/docs/rules/ for more possible rules
select = ["E", "F", "I"]
# Same as Black.
line-length = 88
# Avoid automatically removing unused imports in __init__.py files.
# Such imports will be flagged with a dedicated message suggesting
# that the import is either added to the module's __all__ symbol
ignore-init-module-imports = true

[tool.semantic_release]
version_variables = ["saetrain/__init__.py:__version__"]
version_toml = ["pyproject.toml:project.version"]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = ""
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
